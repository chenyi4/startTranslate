登陆界面，显示登陆。

填入 账号，密码。 返回用户权限。如果权限等于管理员，就跳转管理页面。非管理员就跳它之前的路径
会根据账号随机生成一串号码塞到数据库里面，并且返给前端。

需要建3张表，1张表是权限表，权限1 =>值=>id
	     2张表是用户表   用户 => 权限值 => 账号 => 密码=>用户账号码
                     3张表是登陆，保存随机值的 用户账号码 =>登陆次数记录(1/2/3)=>登陆时间记录
	     =>生成随机数值

管理页面url。新加一个目录，进去页面的时候，把这一串码携带过去，代码会去获取这一串码，
然后页面请求接口，查询这串码是否在数据库里面，如果存在，就响应跳转，进入页面，如果不存在
就返回无权限页面。对页面的各种操作，都需要携带该随机码。

退出的时候，和一定的时间以后，就会把该随机码删除，删除以后，就又没有登陆权限了。
会提示需要重新登陆，重新跳转到登陆的界面。

这样即使保存了随机码，但是会过期。这样即使保存了随机码，也是无效的，因为很快就失效了。

问题1:

登陆界面是嵌入原来的模块还是新增一个自带的链接，还是嵌入后端的代码里面?
使用后端的界面，post数据在浏览器的network里面就不可见了，前后端类型是password，密码也是不可见的。
如果界面不嵌入的话，代码在前端，那前端就归前端，后端归后端，维护性很便利，不会到处窜代码。

问题2:

如果使用前后端分离的方式，会导致密码在post里面可见，即使加密了，也可以
被反编译。而且前端加密的话是可以反编译的，随机码又是可见的，
根据传入的参数和随机码，生成规则就能被反编译。（因为只有我自己登陆，
其实也无所谓，别人并不知道我的账户和名称，只有接口地址是暴露的）；

问题3：

如果别人知道了我的登陆名，然后用机器来碰撞检测来试真实的密码。
接口里面处理，在数据库里面记录，每次某个账号登陆的时候，登陆一次，就往数据库里面插
登陆的时间，如果单位时间里面超过4次，就在接口直接反失败和提示。









